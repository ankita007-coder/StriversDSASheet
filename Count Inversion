#implementation of merge sort

from os import *
from sys import *
from collections import *
from math import *

def getInversions(arr, n) :
	# Write your code here.
	return mergeSort(arr,0,len(arr)-1)



def merge(arr, low, mid,high):
    temp=[] 
    left = low;      
    right = mid + 1;  
    count=0
    while (left <= mid and right <= high):
        if (arr[left] <= arr[right]):
            temp.append(arr[left])
            left+=1
        else:
            temp.append(arr[right])
            count+=(mid - left + 1) 
            right+=1

   

    while (left <= mid):
        temp.append(arr[left])
        left+=1
   
 
    while (right <= high):
        temp.append(arr[right])
        right+=1

    
    for i in range(low,high+1): 
        arr[i] = temp[i - low]
    return count
  
def mergeSort(arr,low, high):
    c=0
    if (low >= high):
        return c
    mid = (low + high) // 2
    c+=mergeSort(arr, low, mid); 
    c+=mergeSort(arr, mid + 1, high); 
    c+=merge(arr, low, mid, high); 
    return c

# Taking inpit using fast I/O.
def takeInput() :
    n = int(input())
    arr = list(map(int, stdin.readline().strip().split(" ")))
    return arr, n

# Main.
arr, n = takeInput()
print(getInversions(arr, n))
