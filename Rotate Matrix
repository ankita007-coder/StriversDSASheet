#Coding Ninjas
#Rotate clockwise by one cell

from math import *
from collections import *
from sys import *
from os import *

def rotateMatrix(mat, n, m):

    # Write your code here
    top,left,right,bottom = 0,0,m-1,n-1
    while top<bottom and left<right:
        mat = helper(top,bottom,right,left,mat)
        top+=1
        left+=1
        bottom-=1
        right-=1
    return mat



def helper(top,bottom,right,left,arr):
    temp = arr[top][left]
    #from left to right swapping
    for i in range(left,right):
        arr[top][i+1],temp = temp,arr[top][i+1]
    
    #from right end top to bottom
    for i in range(top,bottom):
        arr[i+1][right],temp = temp,arr[i+1][right]

    #from right to left
    for i in range(right,left,-1):
        arr[bottom][i-1],temp = temp,arr[bottom][i-1]
    
    #from bottom to top on left end

    for i in range(bottom,top,-1):
        arr[i-1][left],temp = temp, arr[i-1][left]
    return arr


#Leetcode 
#Rotate by 90deg

class Solution:
    def rotate(self, A):
        n = len(A)
        for i in range(n):
            for j in range(i):
                A[i][j], A[j][i] = A[j][i], A[i][j]
        for row in A:
            for j in range(n//2):
                row[j], row[~j] = row[~j], row[j]
