# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        if head is None:
            return None
        if head.next is None and n==1:
            return None
        if n==0:
            return head
        dummy = ListNode(0)
        dummy.next = head
        slow,fast = dummy,dummy
        for i in range(1,n+1):
            fast = fast.next
        while fast and fast.next:
            slow=slow.next
            fast=fast.next
        slow.next = slow.next.next
        return dummy.next
