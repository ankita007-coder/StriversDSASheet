
def uniquePaths(m, n):
	# Write your code here.
	dp = [[0 for i in range(n)] for i in range(m)]
	return helper(m-1,n-1,dp)
	pass

#recursion
# def helper(i,j):
# 	if i==0 and j==0:
# 		return 1
# 	if i<0 or j<0:
# 		return 0
	
# 	up = helper(i-1,j)
# 	left = helper(i,j-1)
# 	return up+left

#memoization
# def helper(i,j,dp):
# 	if i==0 and j==0:
# 		return 1
# 	if i<0 or j<0:
# 		return 0
# 	if dp[i][j]!=-1:
# 		return dp[i][j]
# 	up = helper(i-1,j,dp)
# 	left = helper(i,j-1,dp)
# 	dp[i][j]= up+left
# 	return dp[i][j]

#tabulation
def helper(i,j,dp):
	for ind1 in range(i+1):
		for ind2 in range(j+1):
			if ind1==0 and ind2==0:
				dp[ind1][ind2]=1
				continue
			up = 0
			left = 0
			if ind1>0:
				up = dp[ind1-1][ind2]
			if ind2>0:
				left = dp[ind1][ind2-1]
			dp[ind1][ind2]= up+left
	return dp[i][j]
