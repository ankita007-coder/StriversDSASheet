#Leetcode
class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        le = len(nums)
        out = []
        for i in range(0,le-2):
            if i==0 or (i>0 and nums[i]!=nums[i-1]):
                r,l,sum = i+1,le-1,0-nums[i]
                while r<l:
                    if nums[r]+nums[l]==sum:
                        res=[]
                        res.append(nums[i])
                        res.append(nums[r])
                        res.append(nums[l])
                        out.append(res)
                    
                    
                        while r<l and nums[r]==nums[r+1]:r+=1
                        while r<l and nums[l]==nums[l-1]:l-=1
                        l-=1
                        r+=1
                    elif nums[r]+nums[l]<sum:
                        r+=1
                    else:
                        l-=1
        return out
                

#Coding Ninjas
from sys import stdin, stdout, setrecursionlimit

def findTriplets(arr, n, k):
    ans = list()
    # Sorting the arraylist.
    arr = sorted(arr)

    i = 0
    while i < n:
        target = k-arr[i]
        l, r = i + 1, n - 1
        while l < r:
            sum = arr[l] + arr[r]
            # Finding answer which starts from arr[i].
            if sum < target:
                l += 1

            elif sum > target:
                r -= 1

            else:
                x, y = arr[l], arr[r]
                ans.append([arr[i], x, y])
                # Incrementing front pointer until we reach a different number.
                while l < r and arr[l] == x:
                    l += 1
                # Decrementing last pointer until we reach a different number.
                while l < r and arr[r] == y:
                    r -= 1
                    
	# Ensuring that we don't encounter duplicate values for arr[i].
        while i + 1 < n and arr[i] == arr[i + 1]:
            i += 1

        i += 1
    return ans



















# Taking input using fast I/0.
def takeInput():
    N = int(stdin.readline())
    arr = list(map(int, stdin.readline().strip().split(" ")))
    K = int(stdin.readline())
    return N, arr,K


tc = int(input())
while tc > 0:
    N, arr,K = takeInput()
    ans = findTriplets(arr, N,K)

    if len(ans) == 0:
        stdout.write("-1\n")

    else:
        for i in ans:
            i.sort()
            stdout.write(str(i[0]) + " " + str(i[1]) + " " + str(i[2]) + "\n")

    tc -= 1
