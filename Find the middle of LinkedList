# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        tmp = head
        while tmp and tmp.next:
            head = head.next
            tmp = tmp.next.next
        return head
       
    #another approach
    # l=0
    #     node = head
    #     while head:
    #         l+=1
    #         head = head.next
    #     mid = l//2
    #     count=0
    #     while node:
    #         if count==mid:
    #             return node
    #         else:
    #             count+=1
    #             node = node.next
    #     return None
    
            
